ALTER PLUGGABLE DATABASE KMO_PDB OPEN;
//1

CREATE TABLESPACE TS_KMO
  DATAFILE 'TS_KMO.dbf'
  SIZE 7M
  AUTOEXTEND ON
  NEXT 5M
  MAXSIZE 20M;

CREATE TEMPORARY TABLESPACE TS_KMO_TEMP
  TEMPFILE 'TS_KMO_TEMP.PBF'
  SIZE 5M
  AUTOEXTEND ON
  NEXT 3M
  MAXSIZE 30M;

CREATE PROFILE PF_KMOCORE LIMIT
  FAILED_LOGIN_ATTEMPTS 7
  SESSIONS_PER_USER 3
  PASSWORD_LIFE_TIME 60
  PASSWORD_REUSE_TIME 365
  PASSWORD_LOCK_TIME 1
  CONNECT_TIME 180;

CREATE ROLE RL_KMOCORE;

GRANT
  CONNECT,
  CREATE ANY TABLE,
  CREATE ANY VIEW,
  CREATE ANY PROCEDURE,
  CREATE ANY SEQUENCE,
  SELECT ANY TABLE,
  SELECT ANY SEQUENCE,
  CREATE SESSION,
  RESTRICTED SESSION
  TO RL_KMOCORE;

GRANT
  SELECT ANY TABLE,
  SELECT ANY SEQUENCE
TO RL_KMOCORE;

GRANT
  GRANT ANY OBJECT PRIVILEGE,
  GRANT ANY PRIVILEGE,
  GRANT ANY ROLE
TO RL_KMOCORE;

GRANT
  ADMINISTER ANY SQL TUNING SET
TO RL_KMOCORE;

GRANT
  USE ANY JOB RESOURCE,
  USE ANY SQL TRANSLATION PROFILE
TO RL_KMOCORE;

CREATE USER KMO identified by 1234
  DEFAULT TABLESPACE TS_KMO
  TEMPORARY TABLESPACE TS_KMO_TEMP
  PROFILE PF_KMOCORE
  ACCOUNT UNLOCK;

GRANT RL_KMOCORE TO KMO;
GRANT CREATE SEQUENCE TO KMO;
GRANT UNLIMITED TABLESPACE TO KMO;
GRANT CREATE CLUSTER TO KMO;
GRANT CREATE SYNONYM TO KMO;
GRANT CREATE PUBLIC SYNONYM TO KMO;
GRANT CREATE MATERIALIZED VIEW TO KMO;

//2
CREATE SEQUENCE S1
  START WITH 1000
  INCREMENT BY 10
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOORDER;
  

SELECT S1.NEXTVAL FROM DUAL;
SELECT S1.CURRVAL FROM DUAL;

DROP SEQUENCE S1;
//3
CREATE SEQUENCE S2
  START WITH 10
  INCREMENT BY 10
  MAXVALUE 100
  NOCYCLE;

SELECT S2.NEXTVAL FROM DUAL;

DROP SEQUENCE S2;
//5
CREATE SEQUENCE S3
  START WITH 10
  INCREMENT BY -10
  MINVALUE -100
  MAXVALUE 10
  NOCYCLE
  ORDER;

SELECT S3.CURRVAL FROM DUAL;

DROP SEQUENCE S3;

//6
CREATE SEQUENCE S4
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10
  CYCLE
  CACHE 5
  NOORDER;

SELECT S4.NEXTVAL FROM DUAL;

DROP SEQUENCE S4;

//7
SELECT * FROM USER_SEQUENCES;

//8
DROP SEQUENCE S1;
DROP SEQUENCE S2;
DROP SEQUENCE S3;
DROP SEQUENCE S4;

CREATE TABLE T1 (
  N1 NUMBER(20),
  N2 NUMBER(20),
  N3 NUMBER(20),
  N4 NUMBER(20)
) CACHE STORAGE ( BUFFER_POOL KEEP ) tablespace TS_KMO;

BEGIN
  FOR i IN 1..7 LOOP
    INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.NEXTVAL, S4.NEXTVAL);
  END LOOP;
END;

SELECT * FROM T1;

//9
CREATE CLUSTER ABC (
  X NUMBER(10),
  V VARCHAR2(12)
  ) SIZE 200 HASHKEYS 200;
  
//10
CREATE TABLE A (
  XA NUMBER(10),
  VA VARCHAR2(12),
  Y NUMBER(10)
) CLUSTER ABC(XA, VA);

//11
CREATE TABLE B (
  XB NUMBER(10),
  VB VARCHAR2(12),
  PUDGE NUMBER(10)
) CLUSTER ABC(XB, VB);

INSERT INTO B VALUES (1, '1', 1);

//12
CREATE TABLE C (
  XC NUMBER(10),
  VC VARCHAR2(12),
  HOOK VARCHAR(10)
) CLUSTER ABC(XC, VC);
INSERT INTO C VALUES (1, '1', 'HOOK');

//13
SELECT TABLE_NAME FROM USER_TABLES;
SELECT CLUSTER_NAME FROM USER_CLUSTERS;

//14
CREATE SYNONYM SC FOR KMO.C;
SELECT * FROM SC;

//15
CREATE PUBLIC SYNONYM SB FOR KMO.B;
SELECT * FROM SB;

//16
CREATE TABLE A16 (
  XA NUMBER(10),
  VA VARCHAR2(12),
  Y NUMBER(10),
  CONSTRAINT PK_A16 PRIMARY KEY (XA)
);

CREATE TABLE B16 (
  XB NUMBER(10),
  VB VARCHAR2(12),
  Z NUMBER(10),
  CONSTRAINT FK_B16 FOREIGN KEY (XB) REFERENCES A16(XA)
);

INSERT INTO A16 VALUES (1, '1', 1);
INSERT INTO B16 VALUES (1, '2', 1);

DROP TABLE B16;
DROP TABLE A16;


CREATE VIEW V1 
    AS
    SELECT * FROM A16
        INNER JOIN B16 ON A16.XA = B16.XB;

SELECT * FROM V1;
DROP VIEW V1;

//17
create materialized view MV
    build immediate 
    refresh complete on demand
    start with sysdate
    next sysdate + Interval '1' minute
    AS
    SELECT * FROM A16
        INNER JOIN B16 ON A16.XA = B16.XB;
    
EXECUTE DBMS_MVIEW.REFRESH('MV');
//COMMIT;
select * from MV; 
drop materialized view MV;
